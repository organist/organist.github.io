{"name":"Organist","tagline":"Organist deployment framework","body":"Organist is an open source tool which helps you manage and execute deployments. It's built on top of [Symfony2](http://www.symfony.com) and [Capistrano](http://capistranorb.com/)/[Capifony](http://capifony.org/).\r\n\r\n[![Build Status](https://travis-ci.org/organist/organist.png?branch=master)](https://travis-ci.org/organist/organist)\r\n\r\n[ @todo, Screenshots ]\r\n  \r\n  \r\n## Why?\r\n- Easy to use, everyone can deploy by just hitting a button\r\n- Overview over your DTAP, see which version is deployed on which server\r\n- Centralized security, credentials are injected during deployment (no more passwords in your VCS)\r\n- It logs all of your deployments, so you can see who deployed what and when\r\n- Flexible to extend. Use it with your own type of applications and parameters\r\n  \r\n  \r\n## Proven technology\r\nBuilt on top of:\r\n- [Symfony2](http://www.symfony.com), which is a proven to be a solid foundation for many apps\r\n- [Capistrano](http://capistranorb.com/) / [Capifony](http://capifony.org/), deployments are delegated to these excellent gems\r\n- [Anyterm](http://anyterm.org/), which will give you an interactive console during deployment in your browser\r\n- [Twitter Bootstrap](http://getbootstrap.com/), you can initiate deployments from your mobile ;-)\r\n  \r\n  \r\n## Getting started\r\nFor most users the [organist/packer](https://github.com/organist/packer) repository is the place to start with Organist.\r\n  \r\n  \r\n## Huh? Why start there?\r\nThere are 3 repositories in the organist namespace. There is \"Organist\" which is the actual Symfony2 application. And there is packer and puppet which will help you build an Organist box. These last two repositories are written to give you a quick start. Packer will download a fresh CentOS ISO, does a kickstart setup and runs the Puppet scripts to build up the entire stack that is needed to run Organist.\r\n  \r\nOrganist is highly dependant on other software layers and settings, which is why these layers and settings are poured into [Puppet](http://puppetlabs.com/) scripts. And it is why these are run from [Packer](http://www.packer.io) to prevent  what might be in a custom basebox made be me or someone else. \r\n  \r\n  \r\n## Data model\r\nThis is a little scheme, which explains the data model that is being administered in organist.\r\n\r\n                  application --< userfile\r\n                      |\r\n                      ^\r\n    environment --<  target  --< log\r\n  \r\n  \r\n- Application, which you want to deploy\r\n- Userfile(s), are the shared files and/or directories which needs to be shared between deployments\r\n- Environment, the hosting environment you want to deploy to\r\n- Target, combination of application and environment including accountname, db credentials, etc\r\n- Log, which stores the result of the deployment","google":"UA-47446607-1","note":"Don't delete this file! It's used internally to help with page regeneration."}